from scapy.all import *

def packet_callback(packet):
    if packet.haslayer(IP):
        src_ip = packet[IP].src
        dst_ip = packet[IP].dst

        if packet.haslayer(TCP):
            src_port = packet[TCP].sport
            dst_port = packet[TCP].dport
            print(f"TCP Packet from {src_ip}:{src_port} to {dst_ip}:{dst_port}")

            # Add your rules for detecting suspicious TCP traffic here
            # For example:
            # if dst_port == 22:  # Detect SSH traffic
            #     print("Possible SSH connection attempt detected!")

        elif packet.haslayer(UDP):
            src_port = packet[UDP].sport
            dst_port = packet[UDP].dport
            print(f"UDP Packet from {src_ip}:{src_port} to {dst_ip}:{dst_port}")

            # Add your rules for detecting suspicious UDP traffic here

        # Add more layers (ICMP, etc.) and corresponding rules as needed

if __name__ == "__main__":
    # Sniff packets and invoke packet_callback for each packet
    sniff(prn=packet_callback, store=0)
